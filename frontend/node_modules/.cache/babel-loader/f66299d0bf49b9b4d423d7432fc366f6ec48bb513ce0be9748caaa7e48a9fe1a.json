{"ast":null,"code":"var _jsxFileName = \"D:\\\\DATT Badminton shop\\\\Thuc-tap-doanh-nghiep\\\\frontend\\\\src\\\\contexts\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nexport const useCart = () => {\n  _s();\n  return useContext(CartContext);\n};\n_s(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const CartProvider = ({\n  children\n}) => {\n  _s2();\n  const [cartItems, setCartItems] = useState([]);\n  useEffect(() => {\n    const savedCart = localStorage.getItem(\"cart\");\n    if (savedCart) {\n      try {\n        const parsedCart = JSON.parse(savedCart);\n        // Đảm bảo tương thích với dữ liệu cũ\n        const normalizedCart = parsedCart.map(item => {\n          // Nếu item chưa có cartKey, tạo mới\n          if (!item.cartKey) {\n            const cartKey = getCartItemKey(item.id, item.selectedSize);\n            return {\n              ...item,\n              cartKey\n            };\n          }\n          return item;\n        });\n        setCartItems(normalizedCart);\n      } catch (error) {\n        console.error(\"Error parsing cart from localStorage:\", error);\n        setCartItems([]);\n      }\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(\"cart\", JSON.stringify(cartItems));\n  }, [cartItems]);\n\n  // Tạo key duy nhất cho sản phẩm + size\n  const getCartItemKey = (productId, selectedSize) => {\n    return selectedSize ? `${productId}_${selectedSize.id}` : `${productId}`;\n  };\n  const addToCart = (product, quantity = 1, selectedSize = null) => {\n    setCartItems(prevItems => {\n      const cartKey = getCartItemKey(product.id, selectedSize);\n      const existingItem = prevItems.find(item => {\n        // Kiểm tra cả cartKey và fallback về so sánh trực tiếp\n        return item.cartKey === cartKey || getCartItemKey(item.id, item.selectedSize) === cartKey;\n      });\n      if (existingItem) {\n        return prevItems.map(item => {\n          const itemKey = item.cartKey || getCartItemKey(item.id, item.selectedSize);\n          return itemKey === cartKey ? {\n            ...item,\n            quantity: item.quantity + quantity\n          } : item;\n        });\n      } else {\n        return [...prevItems, {\n          ...product,\n          quantity,\n          selectedSize,\n          cartKey // Lưu key để dễ xử lý\n        }];\n      }\n    });\n  };\n  const removeFromCart = (productId, selectedSize = null) => {\n    const cartKey = getCartItemKey(productId, selectedSize);\n    setCartItems(prevItems => prevItems.filter(item => {\n      const itemKey = item.cartKey || getCartItemKey(item.id, item.selectedSize);\n      return itemKey !== cartKey;\n    }));\n  };\n  const updateQuantity = (productId, quantity, selectedSize = null) => {\n    if (quantity <= 0) {\n      removeFromCart(productId, selectedSize);\n      return;\n    }\n    const cartKey = getCartItemKey(productId, selectedSize);\n    setCartItems(prevItems => prevItems.map(item => {\n      const itemKey = item.cartKey || getCartItemKey(item.id, item.selectedSize);\n      return itemKey === cartKey ? {\n        ...item,\n        quantity\n      } : item;\n    }));\n  };\n  const clearCart = () => {\n    setCartItems([]);\n  };\n  const getCartTotal = () => {\n    return cartItems.reduce((total, item) => total + item.price * item.quantity, 0);\n  };\n  const getCartItemsCount = () => {\n    return cartItems.reduce((total, item) => total + item.quantity, 0);\n  };\n  const value = {\n    cartItems,\n    addToCart,\n    removeFromCart,\n    updateQuantity,\n    clearCart,\n    getCartTotal,\n    getCartItemsCount\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 10\n  }, this);\n};\n_s2(CartProvider, \"jdONvkEabzLc64SbXgqXBHRMg9M=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","CartContext","useCart","_s","CartProvider","children","_s2","cartItems","setCartItems","savedCart","localStorage","getItem","parsedCart","JSON","parse","normalizedCart","map","item","cartKey","getCartItemKey","id","selectedSize","error","console","setItem","stringify","productId","addToCart","product","quantity","prevItems","existingItem","find","itemKey","removeFromCart","filter","updateQuantity","clearCart","getCartTotal","reduce","total","price","getCartItemsCount","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/DATT Badminton shop/Thuc-tap-doanh-nghiep/frontend/src/contexts/CartContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from \"react\";\r\n\r\nconst CartContext = createContext();\r\n\r\nexport const useCart = () => {\r\n  return useContext(CartContext);\r\n};\r\n\r\nexport const CartProvider = ({ children }) => {\r\n  const [cartItems, setCartItems] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const savedCart = localStorage.getItem(\"cart\");\r\n    if (savedCart) {\r\n      try {\r\n        const parsedCart = JSON.parse(savedCart);\r\n        // Đảm bảo tương thích với dữ liệu cũ\r\n        const normalizedCart = parsedCart.map((item) => {\r\n          // Nếu item chưa có cartKey, tạo mới\r\n          if (!item.cartKey) {\r\n            const cartKey = getCartItemKey(item.id, item.selectedSize);\r\n            return { ...item, cartKey };\r\n          }\r\n          return item;\r\n        });\r\n        setCartItems(normalizedCart);\r\n      } catch (error) {\r\n        console.error(\"Error parsing cart from localStorage:\", error);\r\n        setCartItems([]);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"cart\", JSON.stringify(cartItems));\r\n  }, [cartItems]);\r\n\r\n  // Tạo key duy nhất cho sản phẩm + size\r\n  const getCartItemKey = (productId, selectedSize) => {\r\n    return selectedSize ? `${productId}_${selectedSize.id}` : `${productId}`;\r\n  };\r\n\r\n  const addToCart = (product, quantity = 1, selectedSize = null) => {\r\n    setCartItems((prevItems) => {\r\n      const cartKey = getCartItemKey(product.id, selectedSize);\r\n      const existingItem = prevItems.find((item) => {\r\n        // Kiểm tra cả cartKey và fallback về so sánh trực tiếp\r\n        return (\r\n          item.cartKey === cartKey ||\r\n          getCartItemKey(item.id, item.selectedSize) === cartKey\r\n        );\r\n      });\r\n\r\n      if (existingItem) {\r\n        return prevItems.map((item) => {\r\n          const itemKey = item.cartKey || getCartItemKey(item.id, item.selectedSize);\r\n          return itemKey === cartKey\r\n            ? { ...item, quantity: item.quantity + quantity }\r\n            : item;\r\n        });\r\n      } else {\r\n        return [\r\n          ...prevItems,\r\n          {\r\n            ...product,\r\n            quantity,\r\n            selectedSize,\r\n            cartKey, // Lưu key để dễ xử lý\r\n          },\r\n        ];\r\n      }\r\n    });\r\n  };\r\n\r\n  const removeFromCart = (productId, selectedSize = null) => {\r\n    const cartKey = getCartItemKey(productId, selectedSize);\r\n    setCartItems((prevItems) =>\r\n      prevItems.filter((item) => {\r\n        const itemKey = item.cartKey || getCartItemKey(item.id, item.selectedSize);\r\n        return itemKey !== cartKey;\r\n      })\r\n    );\r\n  };\r\n\r\n  const updateQuantity = (productId, quantity, selectedSize = null) => {\r\n    if (quantity <= 0) {\r\n      removeFromCart(productId, selectedSize);\r\n      return;\r\n    }\r\n\r\n    const cartKey = getCartItemKey(productId, selectedSize);\r\n    setCartItems((prevItems) =>\r\n      prevItems.map((item) => {\r\n        const itemKey = item.cartKey || getCartItemKey(item.id, item.selectedSize);\r\n        return itemKey === cartKey ? { ...item, quantity } : item;\r\n      })\r\n    );\r\n  };\r\n\r\n  const clearCart = () => {\r\n    setCartItems([]);\r\n  };\r\n\r\n  const getCartTotal = () => {\r\n    return cartItems.reduce(\r\n      (total, item) => total + item.price * item.quantity,\r\n      0\r\n    );\r\n  };\r\n\r\n  const getCartItemsCount = () => {\r\n    return cartItems.reduce((total, item) => total + item.quantity, 0);\r\n  };\r\n\r\n  const value = {\r\n    cartItems,\r\n    addToCart,\r\n    removeFromCart,\r\n    updateQuantity,\r\n    clearCart,\r\n    getCartTotal,\r\n    getCartItemsCount,\r\n  };\r\n\r\n  return <CartContext.Provider value={value}>{children}</CartContext.Provider>;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}