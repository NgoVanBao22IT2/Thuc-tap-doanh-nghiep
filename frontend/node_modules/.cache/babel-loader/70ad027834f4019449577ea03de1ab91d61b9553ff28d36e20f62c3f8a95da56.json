{"ast":null,"code":"var _jsxFileName = \"D:\\\\DATT Badminton shop\\\\Thuc-tap-doanh-nghiep\\\\frontend\\\\src\\\\contexts\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nexport const useCart = () => {\n  _s();\n  return useContext(CartContext);\n};\n\n// Tạo key duy nhất cho sản phẩm + size (di chuyển ra ngoài component)\n_s(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nconst getCartItemKey = (productId, selectedSize) => {\n  return selectedSize ? `${productId}_${selectedSize.id}` : `${productId}`;\n};\nexport const CartProvider = ({\n  children\n}) => {\n  _s2();\n  const [cartItems, setCartItems] = useState([]);\n  useEffect(() => {\n    const savedCart = localStorage.getItem(\"cart\");\n    if (savedCart) {\n      try {\n        const parsedCart = JSON.parse(savedCart);\n        console.log(\"Parsed cart from localStorage:\", parsedCart); // Debug log\n\n        // Đảm bảo tương thích với dữ liệu cũ\n        const normalizedCart = parsedCart.map(item => {\n          // Nếu item chưa có cartKey, tạo mới\n          if (!item.cartKey) {\n            const cartKey = getCartItemKey(item.id, item.selectedSize);\n            console.log(\"Creating cartKey for item:\", item.id, \"size:\", item.selectedSize, \"key:\", cartKey);\n            return {\n              ...item,\n              cartKey\n            };\n          }\n          console.log(\"Item already has cartKey:\", item.cartKey);\n          return item;\n        });\n        console.log(\"Normalized cart:\", normalizedCart); // Debug log\n        setCartItems(normalizedCart);\n      } catch (error) {\n        console.error(\"Error parsing cart from localStorage:\", error);\n        // Thay vì set empty array, thử clear localStorage và reload\n        localStorage.removeItem(\"cart\");\n        setCartItems([]);\n      }\n    }\n  }, []);\n  useEffect(() => {\n    console.log(\"Saving cart to localStorage:\", cartItems); // Debug log\n    localStorage.setItem(\"cart\", JSON.stringify(cartItems));\n  }, [cartItems]);\n  const addToCart = (product, quantity = 1, selectedSize = null) => {\n    console.log(\"Adding to cart:\", product.id, \"quantity:\", quantity, \"size:\", selectedSize); // Debug log\n\n    setCartItems(prevItems => {\n      const cartKey = getCartItemKey(product.id, selectedSize);\n      console.log(\"Generated cartKey:\", cartKey); // Debug log\n\n      const existingItem = prevItems.find(item => {\n        const itemKey = item.cartKey || getCartItemKey(item.id, item.selectedSize);\n        console.log(\"Comparing cartKey:\", cartKey, \"with itemKey:\", itemKey); // Debug log\n        return itemKey === cartKey;\n      });\n      if (existingItem) {\n        console.log(\"Found existing item, updating quantity\"); // Debug log\n        return prevItems.map(item => {\n          const itemKey = item.cartKey || getCartItemKey(item.id, item.selectedSize);\n          return itemKey === cartKey ? {\n            ...item,\n            quantity: item.quantity + quantity\n          } : item;\n        });\n      } else {\n        console.log(\"Adding new item to cart\"); // Debug log\n        return [...prevItems, {\n          ...product,\n          quantity,\n          selectedSize,\n          cartKey\n        }];\n      }\n    });\n  };\n  const removeFromCart = (productId, selectedSize = null) => {\n    const cartKey = getCartItemKey(productId, selectedSize);\n    setCartItems(prevItems => prevItems.filter(item => {\n      const itemKey = item.cartKey || getCartItemKey(item.id, item.selectedSize);\n      return itemKey !== cartKey;\n    }));\n  };\n  const updateQuantity = (productId, quantity, selectedSize = null) => {\n    if (quantity <= 0) {\n      removeFromCart(productId, selectedSize);\n      return;\n    }\n    const cartKey = getCartItemKey(productId, selectedSize);\n    setCartItems(prevItems => prevItems.map(item => {\n      const itemKey = item.cartKey || getCartItemKey(item.id, item.selectedSize);\n      return itemKey === cartKey ? {\n        ...item,\n        quantity\n      } : item;\n    }));\n  };\n  const clearCart = () => {\n    setCartItems([]);\n  };\n  const getCartTotal = () => {\n    return cartItems.reduce((total, item) => total + item.price * item.quantity, 0);\n  };\n  const getCartItemsCount = () => {\n    return cartItems.reduce((total, item) => total + item.quantity, 0);\n  };\n  const value = {\n    cartItems,\n    addToCart,\n    removeFromCart,\n    updateQuantity,\n    clearCart,\n    getCartTotal,\n    getCartItemsCount\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 10\n  }, this);\n};\n_s2(CartProvider, \"jdONvkEabzLc64SbXgqXBHRMg9M=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","CartContext","useCart","_s","getCartItemKey","productId","selectedSize","id","CartProvider","children","_s2","cartItems","setCartItems","savedCart","localStorage","getItem","parsedCart","JSON","parse","console","log","normalizedCart","map","item","cartKey","error","removeItem","setItem","stringify","addToCart","product","quantity","prevItems","existingItem","find","itemKey","removeFromCart","filter","updateQuantity","clearCart","getCartTotal","reduce","total","price","getCartItemsCount","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/DATT Badminton shop/Thuc-tap-doanh-nghiep/frontend/src/contexts/CartContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from \"react\";\r\n\r\nconst CartContext = createContext();\r\n\r\nexport const useCart = () => {\r\n  return useContext(CartContext);\r\n};\r\n\r\n// Tạo key duy nhất cho sản phẩm + size (di chuyển ra ngoài component)\r\nconst getCartItemKey = (productId, selectedSize) => {\r\n  return selectedSize ? `${productId}_${selectedSize.id}` : `${productId}`;\r\n};\r\n\r\nexport const CartProvider = ({ children }) => {\r\n  const [cartItems, setCartItems] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const savedCart = localStorage.getItem(\"cart\");\r\n    if (savedCart) {\r\n      try {\r\n        const parsedCart = JSON.parse(savedCart);\r\n        console.log(\"Parsed cart from localStorage:\", parsedCart); // Debug log\r\n\r\n        // Đảm bảo tương thích với dữ liệu cũ\r\n        const normalizedCart = parsedCart.map((item) => {\r\n          // Nếu item chưa có cartKey, tạo mới\r\n          if (!item.cartKey) {\r\n            const cartKey = getCartItemKey(item.id, item.selectedSize);\r\n            console.log(\r\n              \"Creating cartKey for item:\",\r\n              item.id,\r\n              \"size:\",\r\n              item.selectedSize,\r\n              \"key:\",\r\n              cartKey\r\n            );\r\n            return { ...item, cartKey };\r\n          }\r\n          console.log(\"Item already has cartKey:\", item.cartKey);\r\n          return item;\r\n        });\r\n\r\n        console.log(\"Normalized cart:\", normalizedCart); // Debug log\r\n        setCartItems(normalizedCart);\r\n      } catch (error) {\r\n        console.error(\"Error parsing cart from localStorage:\", error);\r\n        // Thay vì set empty array, thử clear localStorage và reload\r\n        localStorage.removeItem(\"cart\");\r\n        setCartItems([]);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(\"Saving cart to localStorage:\", cartItems); // Debug log\r\n    localStorage.setItem(\"cart\", JSON.stringify(cartItems));\r\n  }, [cartItems]);\r\n\r\n  const addToCart = (product, quantity = 1, selectedSize = null) => {\r\n    console.log(\r\n      \"Adding to cart:\",\r\n      product.id,\r\n      \"quantity:\",\r\n      quantity,\r\n      \"size:\",\r\n      selectedSize\r\n    ); // Debug log\r\n\r\n    setCartItems((prevItems) => {\r\n      const cartKey = getCartItemKey(product.id, selectedSize);\r\n      console.log(\"Generated cartKey:\", cartKey); // Debug log\r\n\r\n      const existingItem = prevItems.find((item) => {\r\n        const itemKey = item.cartKey || getCartItemKey(item.id, item.selectedSize);\r\n        console.log(\"Comparing cartKey:\", cartKey, \"with itemKey:\", itemKey); // Debug log\r\n        return itemKey === cartKey;\r\n      });\r\n\r\n      if (existingItem) {\r\n        console.log(\"Found existing item, updating quantity\"); // Debug log\r\n        return prevItems.map((item) => {\r\n          const itemKey = item.cartKey || getCartItemKey(item.id, item.selectedSize);\r\n          return itemKey === cartKey\r\n            ? { ...item, quantity: item.quantity + quantity }\r\n            : item;\r\n        });\r\n      } else {\r\n        console.log(\"Adding new item to cart\"); // Debug log\r\n        return [\r\n          ...prevItems,\r\n          {\r\n            ...product,\r\n            quantity,\r\n            selectedSize,\r\n            cartKey,\r\n          },\r\n        ];\r\n      }\r\n    });\r\n  };\r\n\r\n  const removeFromCart = (productId, selectedSize = null) => {\r\n    const cartKey = getCartItemKey(productId, selectedSize);\r\n    setCartItems((prevItems) =>\r\n      prevItems.filter((item) => {\r\n        const itemKey = item.cartKey || getCartItemKey(item.id, item.selectedSize);\r\n        return itemKey !== cartKey;\r\n      })\r\n    );\r\n  };\r\n\r\n  const updateQuantity = (productId, quantity, selectedSize = null) => {\r\n    if (quantity <= 0) {\r\n      removeFromCart(productId, selectedSize);\r\n      return;\r\n    }\r\n\r\n    const cartKey = getCartItemKey(productId, selectedSize);\r\n    setCartItems((prevItems) =>\r\n      prevItems.map((item) => {\r\n        const itemKey = item.cartKey || getCartItemKey(item.id, item.selectedSize);\r\n        return itemKey === cartKey ? { ...item, quantity } : item;\r\n      })\r\n    );\r\n  };\r\n\r\n  const clearCart = () => {\r\n    setCartItems([]);\r\n  };\r\n\r\n  const getCartTotal = () => {\r\n    return cartItems.reduce(\r\n      (total, item) => total + item.price * item.quantity,\r\n      0\r\n    );\r\n  };\r\n\r\n  const getCartItemsCount = () => {\r\n    return cartItems.reduce((total, item) => total + item.quantity, 0);\r\n  };\r\n\r\n  const value = {\r\n    cartItems,\r\n    addToCart,\r\n    removeFromCart,\r\n    updateQuantity,\r\n    clearCart,\r\n    getCartTotal,\r\n    getCartItemsCount,\r\n  };\r\n\r\n  return <CartContext.Provider value={value}>{children}</CartContext.Provider>;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}