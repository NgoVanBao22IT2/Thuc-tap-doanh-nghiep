{"ast":null,"code":"var _jsxFileName = \"D:\\\\DATT Badminton shop\\\\Thuc-tap-doanh-nghiep\\\\frontend\\\\src\\\\contexts\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nexport const useCart = () => {\n  _s();\n  return useContext(CartContext);\n};\n_s(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const CartProvider = ({\n  children\n}) => {\n  _s2();\n  const [cartItems, setCartItems] = useState([]);\n\n  // Lấy giỏ hàng từ localStorage khi load trang\n  useEffect(() => {\n    const savedCart = localStorage.getItem('cart');\n    if (savedCart) {\n      setCartItems(JSON.parse(savedCart));\n    }\n  }, []);\n\n  // Lưu giỏ hàng vào localStorage mỗi khi thay đổi\n  useEffect(() => {\n    localStorage.setItem('cart', JSON.stringify(cartItems));\n  }, [cartItems]);\n\n  // ✅ Thêm vào giỏ, phân biệt theo id + size\n  const addToCart = (product, size, quantity = 1) => {\n    setCartItems(prevItems => {\n      const existingItem = prevItems.find(item => item.id === product.id && item.size === size);\n      if (existingItem) {\n        // Nếu cùng id + cùng size thì cộng số lượng\n        return prevItems.map(item => item.id === product.id && item.size === size ? {\n          ...item,\n          quantity: item.quantity + quantity\n        } : item);\n      } else {\n        // Nếu khác size thì thêm sản phẩm mới\n        return [...prevItems, {\n          ...product,\n          size,\n          quantity\n        }];\n      }\n    });\n  };\n\n  // ✅ Xóa sản phẩm theo id + size\n  const removeFromCart = (productId, size) => {\n    setCartItems(prevItems => prevItems.filter(item => !(item.id === productId && item.size === size)));\n  };\n\n  // ✅ Cập nhật số lượng theo id + size\n  const updateQuantity = (productId, size, quantity) => {\n    if (quantity <= 0) {\n      removeFromCart(productId, size);\n      return;\n    }\n    setCartItems(prevItems => prevItems.map(item => item.id === productId && item.size === size ? {\n      ...item,\n      quantity\n    } : item));\n  };\n\n  // ✅ Xóa toàn bộ giỏ hàng\n  const clearCart = () => {\n    setCartItems([]);\n  };\n\n  // ✅ Tổng tiền\n  const getCartTotal = () => {\n    return cartItems.reduce((total, item) => total + item.price * item.quantity, 0);\n  };\n\n  // ✅ Tổng số lượng sản phẩm\n  const getCartItemsCount = () => {\n    return cartItems.reduce((total, item) => total + item.quantity, 0);\n  };\n  const value = {\n    cartItems,\n    addToCart,\n    removeFromCart,\n    updateQuantity,\n    clearCart,\n    getCartTotal,\n    getCartItemsCount\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s2(CartProvider, \"jdONvkEabzLc64SbXgqXBHRMg9M=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","CartContext","useCart","_s","CartProvider","children","_s2","cartItems","setCartItems","savedCart","localStorage","getItem","JSON","parse","setItem","stringify","addToCart","product","size","quantity","prevItems","existingItem","find","item","id","map","removeFromCart","productId","filter","updateQuantity","clearCart","getCartTotal","reduce","total","price","getCartItemsCount","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/DATT Badminton shop/Thuc-tap-doanh-nghiep/frontend/src/contexts/CartContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\n\r\nconst CartContext = createContext();\r\n\r\nexport const useCart = () => {\r\n  return useContext(CartContext);\r\n};\r\n\r\nexport const CartProvider = ({ children }) => {\r\n  const [cartItems, setCartItems] = useState([]);\r\n\r\n  // Lấy giỏ hàng từ localStorage khi load trang\r\n  useEffect(() => {\r\n    const savedCart = localStorage.getItem('cart');\r\n    if (savedCart) {\r\n      setCartItems(JSON.parse(savedCart));\r\n    }\r\n  }, []);\r\n\r\n  // Lưu giỏ hàng vào localStorage mỗi khi thay đổi\r\n  useEffect(() => {\r\n    localStorage.setItem('cart', JSON.stringify(cartItems));\r\n  }, [cartItems]);\r\n\r\n  // ✅ Thêm vào giỏ, phân biệt theo id + size\r\n  const addToCart = (product, size, quantity = 1) => {\r\n    setCartItems(prevItems => {\r\n      const existingItem = prevItems.find(\r\n        item => item.id === product.id && item.size === size\r\n      );\r\n\r\n      if (existingItem) {\r\n        // Nếu cùng id + cùng size thì cộng số lượng\r\n        return prevItems.map(item =>\r\n          item.id === product.id && item.size === size\r\n            ? { ...item, quantity: item.quantity + quantity }\r\n            : item\r\n        );\r\n      } else {\r\n        // Nếu khác size thì thêm sản phẩm mới\r\n        return [...prevItems, { ...product, size, quantity }];\r\n      }\r\n    });\r\n  };\r\n\r\n  // ✅ Xóa sản phẩm theo id + size\r\n  const removeFromCart = (productId, size) => {\r\n    setCartItems(prevItems =>\r\n      prevItems.filter(item => !(item.id === productId && item.size === size))\r\n    );\r\n  };\r\n\r\n  // ✅ Cập nhật số lượng theo id + size\r\n  const updateQuantity = (productId, size, quantity) => {\r\n    if (quantity <= 0) {\r\n      removeFromCart(productId, size);\r\n      return;\r\n    }\r\n\r\n    setCartItems(prevItems =>\r\n      prevItems.map(item =>\r\n        item.id === productId && item.size === size\r\n          ? { ...item, quantity }\r\n          : item\r\n      )\r\n    );\r\n  };\r\n\r\n  // ✅ Xóa toàn bộ giỏ hàng\r\n  const clearCart = () => {\r\n    setCartItems([]);\r\n  };\r\n\r\n  // ✅ Tổng tiền\r\n  const getCartTotal = () => {\r\n    return cartItems.reduce(\r\n      (total, item) => total + item.price * item.quantity,\r\n      0\r\n    );\r\n  };\r\n\r\n  // ✅ Tổng số lượng sản phẩm\r\n  const getCartItemsCount = () => {\r\n    return cartItems.reduce((total, item) => total + item.quantity, 0);\r\n  };\r\n\r\n  const value = {\r\n    cartItems,\r\n    addToCart,\r\n    removeFromCart,\r\n    updateQuantity,\r\n    clearCart,\r\n    getCartTotal,\r\n    getCartItemsCount,\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={value}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}